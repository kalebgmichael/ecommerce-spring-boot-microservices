spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

server.port=8081
spring.application.name=order-service

eureka.client.service-url.defaultZone=${EUREKA_SERVER_ADDRESS:http://localhost:8761/eureka}
eureka.instance.prefer-ip-address=true
eureka.instance.hostname=order-service
# Actuator & Circuit Breaker
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

# Time limiter
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

# Retry
resilience4j.retry.instances.inventory.timeout-duration=3
resilience4j.retry.instances.inventory.wait-duration=5s

spring.cloud.compatibility-verifier.enabled=false
management.tracing.sampling.probability=1.0

# Kafka Properties
# Use env variable with fallback to localhost
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}

# Kafka topic and consumer config
spring.kafka.template.default-topic=notificationTopic
spring.kafka.consumer.group-id=notificationId
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.type.mapping=event:com.productcnit.OrderPlacedEvent